name: "Battery Management CI"
on: ["push", "pull_request"]

jobs:
  battery_ui:
    name: "Battery UI Test & Lint"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: battery-ui
    strategy:
      matrix:
        node-version: [18.14.0]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci --include=dev
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm t
  battery_ui_deploy:
    name: "Battery UI Docker Build & Push"
    runs-on: ubuntu-latest
    needs: [battery_ui]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./battery-ui
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/battery-ui:latest
  data_emulator:
    name: "Data Emulator Test & Lint"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: data-emulator
    strategy:
      matrix:
        node-version: [18.14.0]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci --include=dev
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm t
  data_emulator_deploy:
    name: "Data Emulator Docker Build & Push"
    runs-on: ubuntu-latest
    needs: [data_emulator]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./data-emulator
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/data-emulator:latest
  streaming_service:
    name: "Streaming Service Test & Lint"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: streaming-service
    strategy:
      matrix:
        node-version: [18.14.0]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci --include=dev
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm t
  streaming_service_deploy:
    name: "Streaming Service Docker Build & Push"
    runs-on: ubuntu-latest
    needs: [streaming_service]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./streaming-service
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/streaming-service:latest
